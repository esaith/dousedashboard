{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/business/business.component.html","webpack:///./src/app/business/business.component.scss","webpack:///./src/app/business/business.component.ts","webpack:///./src/app/entities/business.service.ts","webpack:///./src/app/entities/business.ts","webpack:///./src/app/entities/service-category.ts","webpack:///./src/app/entities/serviceCategory.service.ts","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.scss","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/services/services.component.html","webpack:///./src/app/services/services.component.scss","webpack:///./src/app/services/services.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"button {\\n  margin-right: 5px; }\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n\n  modifyBusiness() {\n\n  }\n\n  modifyServices() {\n\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ServicesComponent } from './services/services.component';\nimport { NavComponent } from './nav/nav.component';\nimport { BusinessComponent } from './business/business.component';\nimport { BusinessService } from './entities/business.service';\n\nconst routes: Routes = [\n  { path: 'business/:id', component: BusinessComponent },\n  { path: 'services/:id', component: ServicesComponent },\n  { path: '', component: ServicesComponent },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ServicesComponent,\n    NavComponent,\n    BusinessComponent\n  ],\n  imports: [\n    RouterModule.forRoot(routes),\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatSnackBarModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n  ],\n  providers: [BusinessService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<app-nav (changePath)=\\\"save()\\\"></app-nav>\\n<button mat-raised-button color=\\\"primary\\\" (click)=\\\"save()\\\" class='save'>Save</button>\\n\\n<div class='prop'>Name</div>\\n<input type='text' name='name' [(ngModel)]='business.Name' required />\\n\\n<div class='prop'>Street Address</div>\\n<input type='text' [(ngModel)]='business.Address' />\\n\\n<div class='prop'>City</div>\\n<input type='text' [(ngModel)]='business.City' />\\n\\n<div class='prop'>State</div>\\n<input type='text' [(ngModel)]='business.State' />\\n\\n<div class='prop'>Zip</div>\\n<input type='text' [(ngModel)]='business.Zip' />\\n\\n<div class='prop'>Phone</div>\\n<input type='text' [(ngModel)]='business.Phone' />\\n\\n<div class='prop'>Instagram Link</div>\\n<input type='text' [(ngModel)]='business.Instagram' />\\n\\n<div class='prop'>Instagram Title</div>\\n<input type='text' [(ngModel)]='business.InstagramTitle' />\\n\\n<div class='prop'>Facebook</div>\\n<input type='text' [(ngModel)]='business.Facebook' />\\n\\n<div class='prop'>Facebook Title</div>\\n<input type='text' [(ngModel)]='business.FacebookTitle' />\\n\\n<div class='prop'>Hours</div>\\n<textarea type='text' [(ngModel)]='business.Hours'></textarea>\\n\\n<div class='prop'>iOS Map Link</div>\\n<input type='text' [(ngModel)]='business.IosMap' />\\n\\n<div class='prop'>Google Map Link</div>\\n<input type='text' [(ngModel)]='business.GoogleMap' />\\n\\n<div class='prop'>Book Now Link</div>\\n<input type='text' [(ngModel)]='business.BookNow' />\\n\\n<div class='prop'>Home Page Notification</div>\\n<input type='text' [(ngModel)]='business.Notification' />\\n\\n<div class='prop'>Logo</div>\\n<input type='file' accept=\\\"image/*\\\" (change)=\\\"uploadImage($event, 'logo')\\\" />\\n<img *ngIf='homeLogo' [src]=\\\"homeLogo\\\" class=\\\"image\\\" />\\n\\n\\n<div class='prop'>Owner Image</div>\\n<input type='file' accept=\\\"image/*\\\" (change)=\\\"uploadImage($event, 'owner')\\\" />\\n<img *ngIf='ownerImage' [src]=\\\"ownerImage\\\" class=\\\"image\\\" />\\n\"","module.exports = \"textarea {\\n  width: 97%;\\n  min-height: 300px;\\n  max-width: 600px; }\\n\\ntextarea,\\ninput {\\n  padding: 5px;\\n  font-size: 16px;\\n  margin: 3px 0 10px; }\\n\\nimg {\\n  max-width: 400px;\\n  display: block;\\n  margin-bottom: 20px; }\\n\\n.save {\\n  position: fixed;\\n  top: 5px;\\n  right: 5px; }\\n\\n.loading-spinner {\\n  position: fixed;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  z-index: 1; }\\n\\n.loading-spinner .background {\\n    position: fixed;\\n    top: 0;\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n    opacity: 0.95;\\n    background-color: #444; }\\n\\n.loading-spinner .modal {\\n    z-index: 2;\\n    height: 200px;\\n    width: 350px;\\n    border: 3px solid #222;\\n    background-color: #f1f1f1;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    text-align: center;\\n    padding: 20px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute } from '@angular/router';\nimport { catchError } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\nimport { BusinessService } from '../entities/business.service';\nimport { BusinessVM } from '../entities/business';\n\n@Component({\n  selector: 'app-business',\n  templateUrl: './business.component.html',\n  styleUrls: ['./business.component.scss']\n})\nexport class BusinessComponent implements OnInit {\n  business = new BusinessVM();\n  ownerImage: SafeUrl;\n  homeLogo: SafeUrl;\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private businessService: BusinessService,\n    private route: ActivatedRoute,\n    private snackBar: MatSnackBar\n  ) {\n    this.snackBar.open('Contacting server ...');\n  }\n\n  ngOnInit() {\n    const id = this.route.snapshot.paramMap.get('id');\n\n    this.businessService.get(id)\n      .pipe(\n        catchError((error, caught) => {\n          this.snackBar.open('Failed to load user data :(', '', {\n            duration: 3000\n          });\n          return of(null);\n        })\n      ).subscribe((business: BusinessVM) => {\n        if (business) {\n          this.business = business;\n          this.homeLogo = this.sanitizer.bypassSecurityTrustUrl(this.business.HomeLogo);\n          this.ownerImage = this.sanitizer.bypassSecurityTrustUrl(this.business.EmployeeImg);\n          this.snackBar.dismiss();\n        }\n      });\n  }\n\n  save() {\n    this.snackBar.open('Saving data to the server ...');\n    this.businessService.save(this.business).subscribe(() => {\n      setTimeout(() => {\n        this.snackBar.open('User data saved', '', {\n          duration: 3000\n        });\n      }, 2000);\n    }, (error) => {\n      this.snackBar.open('Failed to save user data :(', '', {\n        duration: 3000\n      });\n    });\n  }\n\n  uploadImage(event: any, prop: string) {\n    if (event.target.files && event.target.files.length > 0) {\n      if (event.target.files[0].size < 220000) {\n        const file: File = event.target.files[0];\n        const reader = new FileReader();\n        reader.onload = e => {\n          const blob = window.URL.createObjectURL(file);\n\n          switch (prop) {\n            case 'owner':\n              this.ownerImage = this.sanitizer.bypassSecurityTrustUrl(blob);\n              this.business.EmployeeImg = e.target.result.toString();\n              break;\n            case 'logo':\n              this.homeLogo = this.sanitizer.bypassSecurityTrustUrl(blob);\n              this.business.HomeLogo = e.target.result.toString();\n              break;\n          }\n        };\n\n        reader.readAsDataURL(file);\n      } else {\n        this.snackBar.open('Image too large. Please make sure image is less than 200 KB (Preferably 100KB or less)', '',\n          {\n            duration: 5000\n          });\n      }\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { flatMap } from 'rxjs/operators';\r\n\r\nimport { BusinessVM, IBusiness } from './business';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class BusinessService {\r\n    business: BusinessVM;\r\n    constructor(private http: HttpClient) { }\r\n\r\n    save(business: BusinessVM): Observable<BusinessVM> {\r\n        this.business = business;\r\n        return this.http.put<BusinessVM>(`${environment.api}/business/${this.business.Id}`, this.convertToDTO(this.business));\r\n    }\r\n\r\n    get(id: string | number): Observable<BusinessVM> {\r\n        if (this.business) {\r\n            return of(this.business);\r\n        } else {\r\n            return this.http.get(`${environment.api}/business/${id}`).pipe(\r\n                flatMap((business: IBusiness) => {\r\n                    this.business = business;\r\n                    this.business.Hours = this.removeHtmlBreak(this.business.Hours);\r\n                    return of(this.business);\r\n                })\r\n            );\r\n        }\r\n    }\r\n\r\n    private convertToDTO(business: BusinessVM): IBusiness {\r\n        return {\r\n            Id: business.Id,\r\n            Name: business.Name,\r\n            Address: business.Address,\r\n            City: business.City,\r\n            State: business.State,\r\n            Zip: business.Zip,\r\n            Phone: business.Phone,\r\n            Instagram: business.Instagram,\r\n            InstagramTitle: business.InstagramTitle,\r\n            Facebook: business.Facebook,\r\n            FacebookTitle: business.FacebookTitle,\r\n            EmployeeImg: business.EmployeeImg,\r\n            Hours: this.addHtmlBreak(business.Hours),\r\n            HomeLogo: business.HomeLogo,\r\n            IosMap: business.IosMap,\r\n            GoogleMap: business.GoogleMap,\r\n            BookNow: business.BookNow,\r\n            Notification: business.Notification\r\n        };\r\n    }\r\n\r\n    addHtmlBreak(val: string): string {\r\n        if (!val) { return val; }\r\n        return val.replace(/\\n/g, '<br />').trim();\r\n    }\r\n\r\n    removeHtmlBreak(val: string): string {\r\n        if (!val) { return val; }\r\n        return val.replace(/<br \\/>/g, '\\n');\r\n    }\r\n}\r\n","export interface IBusiness {\r\n    Id: string;\r\n    Name: string;\r\n    Address: string;\r\n    City: string;\r\n    State: string;\r\n    Zip: string;\r\n    Phone: string;\r\n    Instagram: string;\r\n    InstagramTitle: string;\r\n    Facebook: string;\r\n    FacebookTitle: string;\r\n    EmployeeImg: string;\r\n    Hours: string;\r\n    HomeLogo: string;\r\n    IosMap: string;\r\n    GoogleMap: string;\r\n    BookNow: string;\r\n    Notification: string;\r\n}\r\n\r\nexport class BusinessVM implements IBusiness {\r\n    Id: string;\r\n    Name: string;\r\n    Address: string;\r\n    City: string;\r\n    State: string;\r\n    Zip: string;\r\n    Phone: string;\r\n    Instagram: string;\r\n    InstagramTitle: string;\r\n    Facebook: string;\r\n    FacebookTitle: string;\r\n    EmployeeImg: string;\r\n    Hours: string;\r\n    HomeLogo: string;\r\n    IosMap: string;\r\n    GoogleMap: string;\r\n    BookNow: string;\r\n    Notification: string;\r\n}\r\n","export interface IServiceCategory {\r\n    Id: number;\r\n    BusinessId: number;\r\n    Name: string;\r\n    ShortName: string;\r\n    LinkId: string;\r\n\r\n    Services: Array<IServices>;\r\n}\r\n\r\nexport class ServiceCategoryVM implements IServiceCategory {\r\n    Id: number;\r\n    BusinessId: number;\r\n    Name: string;\r\n    ShortName: string;\r\n    LinkId: string;\r\n\r\n    Services = new Array<ServicesVM>();\r\n\r\n    editing = false;\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport interface IServices {\r\n    Id: number;\r\n    ServiceCategoryId: number;\r\n    ImageUrl: string;\r\n    Title: string;\r\n    Description: string;\r\n\r\n    ServiceOptions: Array<IServiceOption>;\r\n}\r\n\r\nexport class ServicesVM implements IServices {\r\n    Id: number;\r\n    ServiceCategoryId: number;\r\n    ImageUrl: string;\r\n    Title: string;\r\n    Description: string;\r\n\r\n    ServiceOptions = new Array<ServiceOptionVM>();\r\n    editing = false;\r\n    constructor() {\r\n    }\r\n}\r\n\r\nexport interface IServiceOption {\r\n    Id: number;\r\n    ServicesId: number;\r\n    Title: string;\r\n    Description: string;\r\n    Footer: string;\r\n}\r\n\r\nexport class ServiceOptionVM implements IServiceOption {\r\n    Id: number;\r\n    ServicesId: number;\r\n    Title: string;\r\n    Description: string;\r\n    Footer: string;\r\n\r\n    editing = false;\r\n    constructor() {\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport {\r\n    ServiceCategoryVM,\r\n    ServicesVM,\r\n    IServiceCategory,\r\n    IServiceOption,\r\n    IServices,\r\n    ServiceOptionVM,\r\n} from './service-category';\r\nimport { flatMap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ServiceCategoryService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    save(serviceCategories: Array<ServiceCategoryVM>, businessId: number): Observable<ServiceCategoryVM> {\r\n        return this.http.put<ServiceCategoryVM>(`${environment.api}/services/business/${businessId}`,\r\n            this.convertToDTO(serviceCategories));\r\n    }\r\n\r\n    getByBusinessId(businessId: string | number): Observable<Array<ServiceCategoryVM>> {\r\n        return this.http.get<Array<ServiceCategoryVM>>(`${environment.api}/services/business/${businessId}`)\r\n            .pipe(\r\n                flatMap(response => of(this.convertFromDTO(response)))\r\n            );\r\n    }\r\n\r\n    convertToDTO(serviceCategories: Array<ServiceCategoryVM>): Array<IServiceCategory> {\r\n        const result: Array<IServiceCategory> = [];\r\n\r\n        serviceCategories.forEach(category => {\r\n            const iCategory: IServiceCategory = {\r\n                Id: category.Id,\r\n                BusinessId: category.BusinessId,\r\n                Name: category.Name,\r\n                ShortName: category.ShortName,\r\n                LinkId: category.LinkId,\r\n                Services: []\r\n            };\r\n\r\n            category.Services.forEach(service => {\r\n                const iService: IServices = {\r\n                    Id: service.Id,\r\n                    ServiceCategoryId: service.ServiceCategoryId,\r\n                    ImageUrl: service.ImageUrl,\r\n                    Title: service.Title,\r\n                    Description: this.addHtmlBreak(service.Description),\r\n                    ServiceOptions: []\r\n                };\r\n\r\n                service.ServiceOptions.forEach(option => {\r\n                    const iOption: IServiceOption = {\r\n                        Id: option.Id,\r\n                        ServicesId: option.ServicesId,\r\n                        Title: option.Title,\r\n                        Description: this.addHtmlBreak(option.Description),\r\n                        Footer: this.addHtmlBreak(option.Footer)\r\n                    };\r\n\r\n                    iService.ServiceOptions.push(iOption);\r\n                });\r\n\r\n                iCategory.Services.push(iService);\r\n            });\r\n\r\n            result.push(iCategory);\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    convertFromDTO(serviceCategories: Array<IServiceCategory>): Array<ServiceCategoryVM> {\r\n        const result = new Array<ServiceCategoryVM>();\r\n\r\n        serviceCategories.forEach(iCategory => {\r\n            const category: ServiceCategoryVM = new ServiceCategoryVM();\r\n\r\n            category.Id = iCategory.Id;\r\n            category.BusinessId = iCategory.BusinessId,\r\n                category.LinkId = iCategory.LinkId;\r\n            category.Name = iCategory.Name;\r\n            category.Services = new Array<ServicesVM>();\r\n            category.ShortName = iCategory.ShortName;\r\n\r\n            iCategory.Services.forEach((iService: IServices) => {\r\n                const service = new ServicesVM();\r\n                service.Description = this.removeHtmlBreak(iService.Description);\r\n                service.Id = iService.Id;\r\n                service.ImageUrl = iService.ImageUrl;\r\n                service.ServiceCategoryId = iService.ServiceCategoryId;\r\n                service.ServiceOptions = new Array<ServiceOptionVM>();\r\n                service.Title = iService.Title;\r\n\r\n                iService.ServiceOptions.forEach((iOption: IServiceOption) => {\r\n                    const option = new ServiceOptionVM();\r\n                    option.Description = this.removeHtmlBreak(iOption.Description);\r\n                    option.Footer = this.removeHtmlBreak(iOption.Footer);\r\n                    option.Id = iOption.Id;\r\n                    option.ServicesId = iOption.ServicesId;\r\n                    option.Title = iOption.Title;\r\n\r\n                    service.ServiceOptions.push(option);\r\n                });\r\n\r\n                category.Services.push(service);\r\n            });\r\n\r\n            result.push(category);\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    addHtmlBreak(val: string): string {\r\n        if (!val) { return val; }\r\n        return val.replace(/\\n/g, '<br />').trim();\r\n    }\r\n\r\n    removeHtmlBreak(val: string): string {\r\n        if (!val) { return val; }\r\n        return val.replace(/<br \\/>/g, '\\n');\r\n    }\r\n}","module.exports = \"<div class='nav flex align-center'>\\n  <div class='link' (click)=\\\"modifyBusiness()\\\" [class.active]='path === \\\"business\\\"'>Modify Business</div>\\n  <div class='link' (click)=\\\"modifyServices()\\\" [class.active]='path === \\\"services\\\"'>Modify Services</div>\\n</div>\\n\"","module.exports = \".nav {\\n  padding-bottom: 20px; }\\n  .nav .link {\\n    margin-right: 10px;\\n    padding-bottom: 3px;\\n    box-sizing: border-box;\\n    cursor: pointer;\\n    border-bottom: 2px solid transparent; }\\n  .nav .link.active {\\n      border-bottom: 2px solid #555; }\\n\"","import { Component, OnInit, EventEmitter } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\n// TODO, make nav a vertical left side bar that can expand/collapse\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n  path: string;\n  changePath = new EventEmitter();\n  businessId = 0;\n\n  constructor(private router: Router, private location: Location, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.businessId = parseInt(this.route.snapshot.paramMap.get('id'), 10);\n    this.path = this.location.path().replace(/\\//g, '').replace(/\\d/g, '');\n    if (!this.path) {\n      this.router.navigate([`services/${this.businessId}`]);\n    }\n  }\n\n  modifyServices() {\n    this.changePath.emit();\n    this.router.navigate([`services/${this.businessId}`]);\n  }\n\n  modifyBusiness() {\n    this.changePath.emit();\n    this.router.navigate([`business/${this.businessId}`]);\n  }\n}\n","module.exports = \"<app-nav></app-nav>\\n<button mat-raised-button color=\\\"primary\\\" (click)=\\\"save()\\\" class='save'>Save</button>\\n<div class='flex align-top'>\\n  <div class='column'>\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"newCategory()\\\">Create Category</button>\\n    <div *ngFor=\\\"let category of categories; let i = index\\\" class=\\\"category\\\"\\n      [class.selected]='selectedCategory?.Id === category.Id'>\\n      <div class='flex align-center justify-between'>\\n        <div class='category-name' (click)='selectCategory(category)'>{{category.Name}}</div>\\n        <div *ngIf='!category.editing'>\\n          <button mat-raised-button color=\\\"primary\\\" class='option-edit' (click)='editName(category)'>Edit</button>\\n          <button mat-raised-button color=\\\"warn\\\" class='option-edit' (click)='verifyDeleteCategory(i)'>Del</button>\\n        </div>\\n        <div *ngIf='category.editing' class='flex align-center'>\\n          <button mat-raised-button color=\\\"ok\\\" class='option-edit' (click)='saveName(category)'>A</button>\\n          <button mat-raised-button color=\\\"warn\\\" class='option-edit' (click)='exitName(category)'>X</button>\\n        </div>\\n      </div>\\n      <div class='edit-block' *ngIf='category.editing'>\\n        <div class='title'>Title</div>\\n        <input type='text' [(ngModel)]='category.Name' />\\n        <div class='title'>Short Title</div>\\n        <input type='text' [(ngModel)]='category.ShortName' />\\n      </div>\\n    </div>\\n  </div>\\n  <div class='column' *ngIf='selectedCategory'>\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"newService()\\\">Create Service</button>\\n    <div *ngFor=\\\"let service of selectedCategory.Services; let i = index\\\" class=\\\"category\\\"\\n      [class.selected]='selectedService?.Id === service.Id'>\\n      <div class='flex align-center justify-between'>\\n        <div class='category-name' (click)='selectService(service)'>{{service.Title}}</div>\\n        <div *ngIf='!service.editing'>\\n          <button mat-raised-button color=\\\"primary\\\" class='option-edit' (click)='editService(service)'>Edit</button>\\n          <button mat-raised-button color=\\\"warn\\\" class='option-edit' (click)='verifyDeleteService(i)'>Del</button>\\n        </div>\\n        <div *ngIf='service.editing' class='flex align-center'>\\n          <button mat-raised-button color=\\\"ok\\\" class='option-edit' (click)='saveName(service)'>A</button>\\n          <button mat-raised-button color=\\\"warn\\\" class='option-edit' (click)='exitName(service)'>X</button>\\n        </div>\\n      </div>\\n      <div class='edit-block' *ngIf='service.editing'>\\n        <div class='title'>Title</div>\\n        <input type='text' [(ngModel)]='service.Title' />\\n        <div class='title'>Description</div>\\n        <textarea [(ngModel)]='service.Description'></textarea>\\n        <div>Image</div>\\n        <input type='file' accept=\\\"image/*\\\" (change)=\\\"uploadImage($event, service)\\\" />\\n        <img *ngIf='image' [src]=\\\"image\\\" class=\\\"image\\\" />\\n        <div *ngIf='!image'>No Image Uploaded Yet</div>\\n      </div>\\n    </div>\\n\\n  </div>\\n  <div class='column' *ngIf='selectedService'>\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"newServiceOption()\\\">Create Service Option</button>\\n    <div *ngFor=\\\"let option of selectedService.ServiceOptions; let i = index\\\" class=\\\"category\\\"\\n      [class.selected]='selectedServiceOption?.Id === option.Id'>\\n      <div class='flex align-center justify-between'>\\n        <div class='category-name'>{{option.Title}}</div>\\n        <div *ngIf='!option.editing'>\\n          <button mat-raised-button color=\\\"primary\\\" class='option-edit' (click)='editOption(option)'>Edit</button>\\n          <button mat-raised-button color=\\\"warn\\\" class='option-edit' (click)='verifyDeleteServiceOption(i)'>Del</button>\\n        </div>\\n        <div *ngIf='option.editing' class='flex align-center'>\\n          <button mat-raised-button color=\\\"ok\\\" class='option-edit' (click)='saveName(option)'>A</button>\\n          <button mat-raised-button color=\\\"warn\\\" class='option-edit' (click)='exitName(option)'>X</button>\\n        </div>\\n      </div>\\n      <div class='edit-block' *ngIf='option.editing'>\\n        <div class='title'>Title</div>\\n        <input type='text' [(ngModel)]='option.Title' />\\n        <div class='title'>Description</div>\\n        <textarea [(ngModel)]='option.Description'></textarea>\\n        <div>Footer</div>\\n        <textarea [(ngModel)]='option.Footer'></textarea>\\n      </div>\\n    </div>\\n  </div>\\n  <div class='modal-background' [class.show]='showingDeleteModal'></div>\\n  <div class='modal' [class.show]='showingDeleteModal'>\\n    <div class='question'>Are you sure to delete?</div>\\n    <div class='flex align-center'>\\n      <button mat-raised-button color=\\\"warn\\\" (click)='cancelModal()'>No</button>\\n      <button mat-raised-button color=\\\"primary\\\" (click)='delete()'>Yes</button>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".category {\\n  margin: 10px 0;\\n  border: 1px solid black;\\n  cursor: pointer;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none; }\\n  .category.selected {\\n    box-shadow: 1px 1px 0 0 #555;\\n    background-color: #f1f1f1; }\\n  .category .category-name {\\n    padding: 20px 10px;\\n    flex: 1; }\\n  .save {\\n  position: fixed;\\n  top: 5px;\\n  right: 5px; }\\n  .image {\\n  width: 400px; }\\n  .column {\\n  margin: 0 10px 0 0px;\\n  min-width: 400px; }\\n  .edit {\\n  width: 20px;\\n  height: 20px; }\\n  .edit-button {\\n  cursor: pointer;\\n  padding: 5px; }\\n  .option-edit {\\n  min-width: 5px;\\n  margin: 5px; }\\n  .edit-block {\\n  padding: 10px 10px 0;\\n  box-sizing: border-box;\\n  min-width: 400px; }\\n  .edit-block textarea {\\n    width: 97%;\\n    min-height: 300px; }\\n  .edit-block textarea,\\n  .edit-block input {\\n    padding: 5px;\\n    font-size: 16px;\\n    margin: 3px 0 10px; }\\n  .mat-ok {\\n  background-color: #4caf50;\\n  color: white; }\\n  .modal-background {\\n  position: fixed;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  z-index: 1;\\n  background-color: #ccc;\\n  opacity: 0;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  pointer-events: none;\\n  transition: opacity 0.2s linear; }\\n  .modal-background.show {\\n    transition: opacity 0.2s linear;\\n    opacity: 0.4; }\\n  .modal {\\n  position: fixed;\\n  border: 1px solid black;\\n  border-radius: 5px;\\n  padding: 10px;\\n  margin: auto;\\n  -webkit-transform: translate(-50%, -50%);\\n          transform: translate(-50%, -50%);\\n  top: 50%;\\n  left: 50%;\\n  background-color: white;\\n  box-shadow: 1px 1px 0 0 #999;\\n  z-index: 2;\\n  opacity: 0;\\n  pointer-events: none;\\n  transition: opacity 0.2s linear; }\\n  .modal.show {\\n    transition: opacity 0.2s linear;\\n    pointer-events: all;\\n    opacity: 1; }\\n  .modal .question {\\n    margin-bottom: 5px; }\\n  .modal button:first-child {\\n    margin-right: 5px; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ServiceCategoryVM, ServiceOptionVM, ServicesVM } from '../entities/service-category';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { MatSnackBarModule, MatSnackBar } from '@angular/material/snack-bar';\nimport { ServiceCategoryService } from '../entities/serviceCategory.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-services',\n  templateUrl: './services.component.html',\n  styleUrls: ['./services.component.scss']\n})\nexport class ServicesComponent implements OnInit {\n  title = 'dousedashboard';\n  businessId: number;\n  categories = new Array<ServiceCategoryVM>();\n  showingDeleteModal = false;\n  deleteCategoryIndex = -1;\n  deleteServiceIndex = -1;\n  deleteServiceOptionIndex = -1;\n\n  selectedCategory: ServiceCategoryVM;\n  selectedService: ServicesVM;\n  selectedServiceOption: ServiceOptionVM;\n  image: SafeUrl;\n\n  constructor(\n    public serviceCategoryService: ServiceCategoryService,\n    public route: ActivatedRoute,\n    public sanitizer: DomSanitizer,\n    private snackBar: MatSnackBar) {\n    this.snackBar.open('Getting user data from the server ...');\n  }\n\n  ngOnInit() {\n    this.businessId = parseInt(this.route.snapshot.paramMap.get('id'), 10);\n    this.serviceCategoryService.getByBusinessId(this.businessId)\n      .subscribe(serviceCategories => {\n        this.categories = serviceCategories;\n        this.snackBar.dismiss();\n      }, (error) => {\n        this.snackBar.open('Unable to retrieve data from the server. Please try again later.', '', {\n          duration: 3000\n        });\n      });\n\n    // this.mock();\n  }\n\n  newCategory() {\n    const category = new ServiceCategoryVM();\n    category.Name = 'New Category ';\n    this.categories.push(category);\n  }\n\n  newService() {\n    const service = new ServicesVM();\n    service.Title = 'My New Service';\n    this.selectedCategory.Services.push(service);\n  }\n\n  newServiceOption() {\n    const serviceOption = new ServiceOptionVM();\n    serviceOption.Title = 'Service Option';\n    this.selectedService.ServiceOptions.push(serviceOption);\n  }\n\n  selectCategory(category: ServiceCategoryVM) {\n    this.selectedCategory = category;\n    this.selectedService = null;\n  }\n\n  selectService(service: ServicesVM) {\n    this.selectedService = service;\n    if (this.selectedService.ImageUrl) {\n      this.image = this.sanitizer.bypassSecurityTrustUrl(this.selectedService.ImageUrl);\n    } else {\n      this.image = null;\n    }\n  }\n\n  editName(item: ServiceCategoryVM | ServicesVM) {\n    for (const cat of this.categories) {\n      cat.editing = false;\n    }\n\n    if (this.selectedCategory) {\n      for (const service of this.selectedCategory.Services) {\n        service.editing = false;\n      }\n    }\n\n    item.editing = true;\n  }\n\n  editService(service: ServicesVM) {\n    for (const s of this.selectedCategory.Services) {\n      s.editing = false;\n    }\n\n    service.editing = true;\n    this.selectedService = service;\n    this.image = this.sanitizer.bypassSecurityTrustUrl(service.ImageUrl);\n  }\n\n  saveName(item: ServiceCategoryVM | ServicesVM) {\n    item.editing = false;\n  }\n\n  exitName(item: ServiceCategoryVM | ServicesVM) {\n    item.editing = false;\n  }\n\n  editOption(option: ServiceOptionVM) {\n    for (const opt of this.selectedService.ServiceOptions) {\n      opt.editing = opt.Id === option.Id;\n    }\n  }\n\n  verifyDeleteCategory(index: number) {\n    this.showingDeleteModal = true;\n    this.deleteCategoryIndex = index;\n  }\n\n  verifyDeleteService(index: number) {\n    this.showingDeleteModal = true;\n    this.deleteServiceIndex = index;\n  }\n\n  verifyDeleteServiceOption(index: number) {\n    this.showingDeleteModal = true;\n    this.deleteServiceOptionIndex = index;\n  }\n\n  uploadImage(event: any, service: ServicesVM) {\n    this.selectedService = service;\n\n    if (event.target.files && event.target.files.length > 0) {\n      if (event.target.files[0].size < 220000) {\n        const file: File = event.target.files[0];\n        const reader = new FileReader();\n        reader.onload = e => {\n          const blob = window.URL.createObjectURL(file);\n          this.selectedService.ImageUrl = e.target.result.toString();\n          this.image = this.sanitizer.bypassSecurityTrustUrl(e.target.result.toString());\n        };\n\n        reader.readAsDataURL(file);\n      } else {\n        this.snackBar.open('Image too large. Please make sure image is less than 200 KB (Preferably 100KB or less)', '',\n          {\n            duration: 5000\n          });\n      }\n    }\n  }\n\n  save() {\n    this.snackBar.open('Saving...');\n    this.serviceCategoryService.save(this.categories, this.businessId).subscribe(() => {\n      this.snackBar.open('Saved to server', '', {\n        duration: 3000\n      });\n    });\n  }\n\n  delete() {\n    if (this.deleteServiceIndex > -1) {\n      this.selectedCategory.Services.splice(this.deleteServiceIndex, 1);\n    } else if (this.deleteCategoryIndex > -1) {\n      this.categories.splice(this.deleteCategoryIndex, 1);\n    } else if (this.deleteServiceOptionIndex > -1) {\n      this.selectedService.ServiceOptions.splice(this.deleteServiceOptionIndex, 1);\n    }\n\n    this.deleteCategoryIndex = -1;\n    this.deleteServiceIndex = -1;\n    this.deleteServiceOptionIndex = -1;\n\n    this.showingDeleteModal = false;\n\n    this.selectedCategory = null;\n    this.selectedService = null;\n    this.selectedServiceOption = null;\n  }\n\n  cancelModal() {\n    this.showingDeleteModal = false;\n    this.deleteCategoryIndex = -1;\n    this.deleteServiceIndex = -1;\n  }\n\n  mock() {\n    const category = new ServiceCategoryVM();\n    category.Name = 'My Category 1';\n\n    const service = new ServicesVM();\n    service.Title = 'My Service';\n\n    const serviceOption = new ServiceOptionVM();\n    serviceOption.Title = 'My Option 1';\n    service.ServiceOptions.push(serviceOption);\n\n    category.Services.push(service);\n    this.categories.push(category);\n\n    this.selectedCategory = category;\n    this.selectedService = service;\n    this.selectedServiceOption = serviceOption;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // api: 'https://localhost:44365/api'\n  api: 'https://192.168.1.4:83'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}